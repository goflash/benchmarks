#!/usr/bin/env bash
set -euo pipefail

cd "$(dirname "$0")/.."

kill_pidfile() {
  local name="$1"; local pidfile="logs/$1.pid"
  if [[ -f "$pidfile" ]]; then
    local pid
    pid=$(cat "$pidfile" 2>/dev/null || true)
    if [[ -n "${pid:-}" ]] && kill -0 "$pid" 2>/dev/null; then
      kill "$pid" 2>/dev/null || true
      # Wait up to ~3s for graceful shutdown
      for _ in {1..10}; do
        if kill -0 "$pid" 2>/dev/null; then
          sleep 0.3
        else
          break
        fi
      done
      # Force kill if still alive
      kill -9 "$pid" 2>/dev/null || true
    fi
    rm -f "$pidfile"
    echo "Stopped $name"
  fi
}

kill_port() {
  local port="$1"
  if command -v lsof >/dev/null 2>&1; then
    local pids
    pids=$(lsof -ti tcp:"$port" 2>/dev/null || true)
    if [[ -n "$pids" ]]; then
      echo "$pids" | xargs kill 2>/dev/null || true
      sleep 0.3
      echo "$pids" | xargs kill -9 2>/dev/null || true
      echo "Freed port :$port"
    fi
  fi
}

kill_pidfile flash
kill_pidfile gin
kill_pidfile gofiber

# Fallback: free known ports if still occupied
kill_port 18080
kill_port 18081
kill_port 18082

echo "Done."
